# Generated by Django 5.1.4 on 2025-06-12 00:01

import apps.core.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("branches", "0001_initial"),
        ("churches", "0001_initial"),
        ("members", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Visitor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro",
                        verbose_name="Criado em",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização",
                        verbose_name="Atualizado em",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único universal",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica se o registro está ativo no sistema",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text="Nome completo do visitante",
                        max_length=200,
                        verbose_name="Nome Completo",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="E-mail do visitante",
                        max_length=254,
                        verbose_name="E-mail",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Telefone no formato (XX) XXXXX-XXXX",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefone deve estar no formato: (XX) XXXXX-XXXX ou (XX) XXXX-XXXX",
                                regex="^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$",
                            )
                        ],
                        verbose_name="Telefone",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True,
                        help_text="Data de nascimento (opcional)",
                        null=True,
                        verbose_name="Data de Nascimento",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Feminino"),
                            ("O", "Outro"),
                            ("N", "Não informado"),
                        ],
                        default="N",
                        help_text="Gênero do visitante",
                        max_length=1,
                        verbose_name="Gênero",
                    ),
                ),
                (
                    "cpf",
                    models.CharField(
                        blank=True,
                        help_text="CPF do visitante (opcional)",
                        max_length=14,
                        validators=[apps.core.models.validate_cpf],
                        verbose_name="CPF",
                    ),
                ),
                (
                    "how_found_church",
                    models.CharField(
                        choices=[
                            ("friend_invitation", "Convite de amigo"),
                            ("family_invitation", "Convite da família"),
                            ("social_media", "Redes sociais"),
                            ("google_search", "Busca no Google"),
                            ("event", "Evento especial"),
                            ("evangelism", "Evangelismo"),
                            ("passing_by", "Passando em frente"),
                            ("other", "Outro"),
                        ],
                        default="other",
                        help_text="Como o visitante conheceu a igreja",
                        max_length=50,
                        verbose_name="Como conheceu a igreja",
                    ),
                ),
                (
                    "interest",
                    models.CharField(
                        choices=[
                            ("worship", "Culto/Adoração"),
                            ("bible_study", "Estudo bíblico"),
                            ("community", "Comunidade"),
                            ("help", "Ajuda/Oração"),
                            ("curiosity", "Curiosidade"),
                            ("family", "Família/Filhos"),
                            ("young", "Jovens"),
                            ("music", "Música"),
                            ("other", "Outro"),
                        ],
                        default="worship",
                        help_text="Principal interesse na igreja",
                        max_length=50,
                        verbose_name="Interesse Principal",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("approved", "Aprovado"),
                            ("contacted", "Contatado"),
                            ("visiting", "Visitando"),
                            ("member", "Virou membro"),
                            ("inactive", "Inativo"),
                        ],
                        default="approved",
                        help_text="Status atual do visitante",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "converted_to_member",
                    models.BooleanField(
                        default=False,
                        help_text="Se já se tornou membro da igreja",
                        verbose_name="Convertido para Membro",
                    ),
                ),
                (
                    "conversion_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data que se tornou membro",
                        null=True,
                        verbose_name="Data de Conversão",
                    ),
                ),
                (
                    "conversion_notes",
                    models.TextField(
                        blank=True,
                        help_text="Observações sobre o processo de conversão",
                        verbose_name="Observações da Conversão",
                    ),
                ),
                (
                    "visits_count",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Quantas vezes visitou a igreja",
                        verbose_name="Número de Visitas",
                    ),
                ),
                (
                    "last_visit_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Data da última visita",
                        verbose_name="Última Visita",
                    ),
                ),
                (
                    "follow_up_needed",
                    models.BooleanField(
                        default=True,
                        help_text="Se precisa de acompanhamento",
                        verbose_name="Precisa de Follow-up",
                    ),
                ),
                (
                    "last_contact_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data do último contato",
                        null=True,
                        verbose_name="Último Contato",
                    ),
                ),
                (
                    "next_contact_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data planejada para próximo contato",
                        null=True,
                        verbose_name="Próximo Contato",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Observações sobre o visitante",
                        verbose_name="Observações",
                    ),
                ),
                (
                    "registration_ip",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP usado no registro",
                        null=True,
                        verbose_name="IP de Registro",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="Informações do navegador/device",
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "accept_email_contact",
                    models.BooleanField(
                        default=True,
                        help_text="Permite contato por e-mail",
                        verbose_name="Aceita Contato por E-mail",
                    ),
                ),
                (
                    "accept_phone_contact",
                    models.BooleanField(
                        default=True,
                        help_text="Permite contato por telefone",
                        verbose_name="Aceita Contato por Telefone",
                    ),
                ),
                (
                    "accept_whatsapp_contact",
                    models.BooleanField(
                        default=True,
                        help_text="Permite contato por WhatsApp",
                        verbose_name="Aceita Contato por WhatsApp",
                    ),
                ),
                (
                    "branch",
                    models.ForeignKey(
                        help_text="Filial específica visitada",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visitors",
                        to="branches.branch",
                        verbose_name="Filial",
                    ),
                ),
                (
                    "church",
                    models.ForeignKey(
                        help_text="Igreja que o visitante conheceu",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visitors",
                        to="churches.church",
                        verbose_name="Igreja",
                    ),
                ),
                (
                    "converted_member",
                    models.OneToOneField(
                        blank=True,
                        help_text="Membro criado a partir deste visitante",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="visitor_origin",
                        to="members.member",
                        verbose_name="Membro Convertido",
                    ),
                ),
            ],
            options={
                "verbose_name": "Visitante",
                "verbose_name_plural": "Visitantes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="VisitorFollowUp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro",
                        verbose_name="Criado em",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização",
                        verbose_name="Atualizado em",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único universal",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica se o registro está ativo no sistema",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "follow_up_type",
                    models.CharField(
                        choices=[
                            ("call", "Ligação"),
                            ("whatsapp", "WhatsApp"),
                            ("email", "E-mail"),
                            ("visit", "Visita pessoal"),
                            ("invitation", "Convite para evento"),
                        ],
                        help_text="Tipo de contato realizado",
                        max_length=20,
                        verbose_name="Tipo de Follow-up",
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateTimeField(
                        help_text="Data/hora agendada para o follow-up",
                        verbose_name="Data Agendada",
                    ),
                ),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data/hora que foi realizado",
                        null=True,
                        verbose_name="Data de Conclusão",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Agendado"),
                            ("completed", "Concluído"),
                            ("cancelled", "Cancelado"),
                            ("rescheduled", "Reagendado"),
                        ],
                        default="scheduled",
                        help_text="Status do follow-up",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Observações sobre o follow-up",
                        verbose_name="Observações",
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("contact_made", "Contato realizado"),
                            ("no_answer", "Não atendeu"),
                            ("interested", "Demonstrou interesse"),
                            ("will_visit", "Virá próximo culto"),
                            ("not_interested", "Não interessado"),
                            ("wrong_number", "Número errado"),
                            ("requested_removal", "Pediu remoção"),
                        ],
                        help_text="Resultado do contato",
                        max_length=30,
                        verbose_name="Resultado",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Usuário responsável pelo follow-up",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_follow_ups",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Responsável",
                    ),
                ),
                (
                    "visitor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follow_ups",
                        to="visitors.visitor",
                        verbose_name="Visitante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Follow-up de Visitante",
                "verbose_name_plural": "Follow-ups de Visitantes",
                "ordering": ["scheduled_date"],
            },
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(
                fields=["church", "-created_at"], name="visitors_vi_church__94db52_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(
                fields=["branch", "-created_at"], name="visitors_vi_branch__f210ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(fields=["status"], name="visitors_vi_status_9b5b9b_idx"),
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(
                fields=["converted_to_member"], name="visitors_vi_convert_e27703_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(
                fields=["follow_up_needed"], name="visitors_vi_follow__52d788_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(fields=["email"], name="visitors_vi_email_e17823_idx"),
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(fields=["phone"], name="visitors_vi_phone_3827a1_idx"),
        ),
        migrations.AddIndex(
            model_name="visitor",
            index=models.Index(
                fields=["next_contact_date"], name="visitors_vi_next_co_491dca_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visitorfollowup",
            index=models.Index(
                fields=["visitor", "scheduled_date"],
                name="visitors_vi_visitor_1c31fc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="visitorfollowup",
            index=models.Index(
                fields=["assigned_to", "status"], name="visitors_vi_assigne_9c211b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visitorfollowup",
            index=models.Index(
                fields=["scheduled_date", "status"],
                name="visitors_vi_schedul_7f459d_idx",
            ),
        ),
    ]
