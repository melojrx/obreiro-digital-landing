# Generated by Django - Safe removal of visitor_registration_url field

from django.db import migrations


def remove_field_if_exists(apps, schema_editor):
    """
    Remove o campo visitor_registration_url se ele existir.
    Migração segura que não quebra se o campo não existir.
    """
    db_alias = schema_editor.connection.alias
    
    # Verificar se o campo existe antes de tentar removê-lo
    with schema_editor.connection.cursor() as cursor:
        try:
            # Verificar se a coluna existe
            cursor.execute("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_name='branches_branch' 
                AND column_name='visitor_registration_url'
                AND table_schema='public';
            """)
            
            if cursor.fetchone():
                # Campo existe, podemos removê-lo
                cursor.execute("ALTER TABLE branches_branch DROP COLUMN visitor_registration_url;")
                print("✅ Campo visitor_registration_url removido com sucesso")
            else:
                print("ℹ️ Campo visitor_registration_url não existe, nada a fazer")
                
        except Exception as e:
            print(f"⚠️ Erro ao remover campo visitor_registration_url: {e}")
            # Não re-raise o erro para não quebrar a migração


def reverse_remove_field(apps, schema_editor):
    """
    Migração reversa - adiciona o campo de volta se necessário
    """
    db_alias = schema_editor.connection.alias
    
    with schema_editor.connection.cursor() as cursor:
        try:
            # Verificar se o campo já existe
            cursor.execute("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_name='branches_branch' 
                AND column_name='visitor_registration_url'
                AND table_schema='public';
            """)
            
            if not cursor.fetchone():
                # Campo não existe, vamos criá-lo
                cursor.execute("""
                    ALTER TABLE branches_branch 
                    ADD COLUMN visitor_registration_url VARCHAR(200) DEFAULT '';
                """)
                print("✅ Campo visitor_registration_url recriado na migração reversa")
            else:
                print("ℹ️ Campo visitor_registration_url já existe")
                
        except Exception as e:
            print(f"⚠️ Erro ao recriar campo visitor_registration_url: {e}")


class Migration(migrations.Migration):

    dependencies = [
        ('branches', '0002_branch_total_visitors_registered'),
    ]

    operations = [
        migrations.RunPython(
            remove_field_if_exists,
            reverse_remove_field,
            hints={'target_db': 'default'},
        ),
    ]