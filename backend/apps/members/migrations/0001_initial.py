# Generated by Django 5.1.4 on 2025-06-12 00:01

import apps.core.models
import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("activities", "0001_initial"),
        ("churches", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro",
                        verbose_name="Criado em",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização",
                        verbose_name="Atualizado em",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único universal",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica se o registro está ativo no sistema",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text="Nome completo do membro",
                        max_length=200,
                        verbose_name="Nome Completo",
                    ),
                ),
                (
                    "cpf",
                    models.CharField(
                        blank=True,
                        help_text="CPF do membro",
                        max_length=14,
                        null=True,
                        unique=True,
                        validators=[apps.core.models.validate_cpf],
                        verbose_name="CPF",
                    ),
                ),
                (
                    "rg",
                    models.CharField(
                        blank=True,
                        help_text="RG ou documento de identidade",
                        max_length=20,
                        verbose_name="RG",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        help_text="Data de nascimento",
                        verbose_name="Data de Nascimento",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Feminino"),
                            ("O", "Outro"),
                            ("N", "Não informado"),
                        ],
                        default="N",
                        help_text="Gênero do membro",
                        max_length=1,
                        verbose_name="Gênero",
                    ),
                ),
                (
                    "marital_status",
                    models.CharField(
                        choices=[
                            ("single", "Solteiro(a)"),
                            ("married", "Casado(a)"),
                            ("divorced", "Divorciado(a)"),
                            ("widowed", "Viúvo(a)"),
                            ("other", "Outro"),
                        ],
                        default="single",
                        help_text="Estado civil",
                        max_length=20,
                        verbose_name="Estado Civil",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="E-mail pessoal",
                        max_length=254,
                        verbose_name="E-mail",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Telefone principal no formato (XX) XXXXX-XXXX",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefone deve estar no formato: (XX) XXXXX-XXXX ou (XX) XXXX-XXXX",
                                regex="^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$",
                            )
                        ],
                        verbose_name="Telefone",
                    ),
                ),
                (
                    "phone_secondary",
                    models.CharField(
                        blank=True,
                        help_text="Telefone alternativo",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefone deve estar no formato: (XX) XXXXX-XXXX ou (XX) XXXX-XXXX",
                                regex="^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$",
                            )
                        ],
                        verbose_name="Telefone Secundário",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True,
                        help_text="Endereço completo",
                        verbose_name="Endereço",
                    ),
                ),
                (
                    "neighborhood",
                    models.CharField(
                        blank=True,
                        help_text="Bairro",
                        max_length=100,
                        verbose_name="Bairro",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="Cidade",
                        max_length=100,
                        verbose_name="Cidade",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        help_text="Sigla do estado (ex: SP)",
                        max_length=2,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        blank=True,
                        help_text="CEP no formato XXXXX-XXX",
                        max_length=10,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="CEP deve estar no formato: XXXXX-XXX",
                                regex="^\\d{5}-\\d{3}$",
                            )
                        ],
                        verbose_name="CEP",
                    ),
                ),
                (
                    "membership_status",
                    models.CharField(
                        choices=[
                            ("active", "Ativo"),
                            ("inactive", "Inativo"),
                            ("transferred", "Transferido"),
                            ("disciplined", "Disciplinado"),
                            ("deceased", "Falecido"),
                        ],
                        default="active",
                        help_text="Status atual da membresia",
                        max_length=20,
                        verbose_name="Status de Membresia",
                    ),
                ),
                (
                    "conversion_date",
                    models.DateField(
                        blank=True,
                        help_text="Data da conversão/aceitação de Jesus",
                        null=True,
                        verbose_name="Data de Conversão",
                    ),
                ),
                (
                    "baptism_date",
                    models.DateField(
                        blank=True,
                        help_text="Data do batismo nas águas",
                        null=True,
                        verbose_name="Data do Batismo",
                    ),
                ),
                (
                    "membership_date",
                    models.DateField(
                        default=datetime.date.today,
                        help_text="Data de ingresso como membro",
                        verbose_name="Data de Membresia",
                    ),
                ),
                (
                    "previous_church",
                    models.CharField(
                        blank=True,
                        help_text="Nome da igreja anterior (se aplicável)",
                        max_length=200,
                        verbose_name="Igreja Anterior",
                    ),
                ),
                (
                    "transfer_letter",
                    models.BooleanField(
                        default=False,
                        help_text="Se veio com carta de transferência",
                        verbose_name="Possui Carta de Transferência",
                    ),
                ),
                (
                    "ministerial_function",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("member", "Membro"),
                            ("deacon", "Diácono"),
                            ("deaconess", "Diaconisa"),
                            ("elder", "Presbítero"),
                            ("evangelist", "Evangelista"),
                            ("pastor", "Pastor"),
                            ("missionary", "Missionário"),
                            ("leader", "Líder"),
                            ("cooperator", "Cooperador"),
                            ("auxiliary", "Auxiliar"),
                        ],
                        default="member",
                        help_text="Função/cargo ministerial",
                        max_length=100,
                        verbose_name="Função Ministerial",
                    ),
                ),
                (
                    "ordination_date",
                    models.DateField(
                        blank=True,
                        help_text="Data de ordenação ministerial (se aplicável)",
                        null=True,
                        verbose_name="Data de Ordenação",
                    ),
                ),
                (
                    "profession",
                    models.CharField(
                        blank=True,
                        help_text="Profissão do membro",
                        max_length=100,
                        verbose_name="Profissão",
                    ),
                ),
                (
                    "education_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("elementary_incomplete", "Fundamental Incompleto"),
                            ("elementary_complete", "Fundamental Completo"),
                            ("high_school_incomplete", "Médio Incompleto"),
                            ("high_school_complete", "Médio Completo"),
                            ("higher_incomplete", "Superior Incompleto"),
                            ("higher_complete", "Superior Completo"),
                            ("postgraduate", "Pós-graduação"),
                            ("masters", "Mestrado"),
                            ("doctorate", "Doutorado"),
                        ],
                        help_text="Nível de escolaridade",
                        max_length=30,
                        verbose_name="Escolaridade",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        help_text="Foto do membro",
                        null=True,
                        upload_to="members/photos/",
                        verbose_name="Foto",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Observações gerais sobre o membro",
                        verbose_name="Observações",
                    ),
                ),
                (
                    "accept_sms",
                    models.BooleanField(
                        default=True,
                        help_text="Permite receber SMS",
                        verbose_name="Aceita SMS",
                    ),
                ),
                (
                    "accept_email",
                    models.BooleanField(
                        default=True,
                        help_text="Permite receber e-mails",
                        verbose_name="Aceita E-mail",
                    ),
                ),
                (
                    "accept_whatsapp",
                    models.BooleanField(
                        default=True,
                        help_text="Permite contato via WhatsApp",
                        verbose_name="Aceita WhatsApp",
                    ),
                ),
                (
                    "church",
                    models.ForeignKey(
                        help_text="Igreja à qual o membro pertence",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="churches.church",
                        verbose_name="Igreja",
                    ),
                ),
                (
                    "ministries",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Ministérios dos quais participa",
                        related_name="members",
                        to="activities.ministry",
                        verbose_name="Ministérios",
                    ),
                ),
                (
                    "responsible",
                    models.ForeignKey(
                        blank=True,
                        help_text="Responsável legal (para menores)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dependents",
                        to="members.member",
                        verbose_name="Responsável",
                    ),
                ),
                (
                    "spouse",
                    models.ForeignKey(
                        blank=True,
                        help_text="Cônjuge (se casado e também for membro)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="married_to",
                        to="members.member",
                        verbose_name="Cônjuge",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        help_text="Usuário do sistema (se tiver acesso)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="member_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário do Sistema",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membro",
                "verbose_name_plural": "Membros",
                "ordering": ["church", "full_name"],
            },
        ),
        migrations.CreateModel(
            name="MembershipStatusLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro",
                        verbose_name="Criado em",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização",
                        verbose_name="Atualizado em",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único universal",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica se o registro está ativo no sistema",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "previous_status",
                    models.CharField(
                        choices=[
                            ("active", "Ativo"),
                            ("inactive", "Inativo"),
                            ("transferred", "Transferido"),
                            ("disciplined", "Disciplinado"),
                            ("deceased", "Falecido"),
                        ],
                        max_length=20,
                        verbose_name="Status Anterior",
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        choices=[
                            ("active", "Ativo"),
                            ("inactive", "Inativo"),
                            ("transferred", "Transferido"),
                            ("disciplined", "Disciplinado"),
                            ("deceased", "Falecido"),
                        ],
                        max_length=20,
                        verbose_name="Novo Status",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        help_text="Motivo da mudança de status",
                        verbose_name="Motivo",
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="member_status_changes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Alterado por",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_logs",
                        to="members.member",
                        verbose_name="Membro",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Status de Membresia",
                "verbose_name_plural": "Logs de Status de Membresia",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MemberTransferLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro",
                        verbose_name="Criado em",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização",
                        verbose_name="Atualizado em",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único universal",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica se o registro está ativo no sistema",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        help_text="Motivo da transferência",
                        verbose_name="Motivo",
                    ),
                ),
                (
                    "from_church",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members_transferred_out",
                        to="churches.church",
                        verbose_name="Igreja de Origem",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer_logs",
                        to="members.member",
                        verbose_name="Membro",
                    ),
                ),
                (
                    "to_church",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members_transferred_in",
                        to="churches.church",
                        verbose_name="Igreja de Destino",
                    ),
                ),
                (
                    "transferred_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="member_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Transferido por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Transferência",
                "verbose_name_plural": "Logs de Transferências",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["church", "full_name"], name="members_mem_church__dc1021_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["church", "membership_status"],
                name="members_mem_church__3459e6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["church", "is_active"], name="members_mem_church__53e067_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(fields=["cpf"], name="members_mem_cpf_7edbce_idx"),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["birth_date"], name="members_mem_birth_d_9747cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["membership_date"], name="members_mem_members_feed42_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["ministerial_function"], name="members_mem_ministe_80a439_idx"
            ),
        ),
    ]
