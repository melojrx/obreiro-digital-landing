# Generated migration: Convert DENOMINATION_ADMIN to CHURCH_ADMIN
from django.db import migrations


def convert_denomination_admin_to_church_admin(apps, schema_editor):
    """
    Converte todos os usu√°rios com papel DENOMINATION_ADMIN para CHURCH_ADMIN.
    
    Esta migra√ß√£o √© necess√°ria devido √† mudan√ßa no modelo de neg√≥cio onde:
    - O papel DENOMINATION_ADMIN foi removido
    - Suas responsabilidades foram absorvidas pelo CHURCH_ADMIN
    - CHURCH_ADMIN agora √© o papel do usu√°rio pagante que pode gerenciar
      uma ou m√∫ltiplas igrejas (se tiver uma denomina√ß√£o)
    """
    ChurchUser = apps.get_model('accounts', 'ChurchUser')
    
    # Contar quantos usu√°rios ser√£o afetados
    affected_count = ChurchUser.objects.filter(
        role='denomination_admin',
        is_active=True
    ).count()
    
    if affected_count > 0:
        print(f"\n{'='*80}")
        print(f"üîÑ MIGRA√á√ÉO DE PAP√âIS: DENOMINATION_ADMIN ‚Üí CHURCH_ADMIN")
        print(f"{'='*80}")
        print(f"üìä Total de registros a serem atualizados: {affected_count}")
        print(f"{'='*80}\n")
        
        # Atualizar todos os registros
        updated = ChurchUser.objects.filter(
            role='denomination_admin'
        ).update(role='church_admin')
        
        print(f"‚úÖ {updated} registros atualizados com sucesso!")
        print(f"{'='*80}\n")
    else:
        print("\n‚ÑπÔ∏è  Nenhum registro com papel DENOMINATION_ADMIN encontrado.")


def reverse_conversion(apps, schema_editor):
    """
    Revers√£o da migra√ß√£o: converte CHURCH_ADMIN de volta para DENOMINATION_ADMIN.
    
    ATEN√á√ÉO: Esta revers√£o √© parcial e pode n√£o ser precisa, pois n√£o conseguimos
    distinguir entre CHURCH_ADMIN que eram originalmente DENOMINATION_ADMIN
    e CHURCH_ADMIN que j√° existiam antes.
    """
    ChurchUser = apps.get_model('accounts', 'ChurchUser')
    
    print("\n‚ö†Ô∏è  AVISO: Esta revers√£o √© parcial!")
    print("N√£o √© poss√≠vel distinguir entre CHURCH_ADMIN originais e convertidos.")
    print("Recomenda-se fazer backup dos dados antes de reverter.\n")
    
    # Aqui voc√™ poderia implementar l√≥gica mais complexa se necess√°rio
    # Por exemplo, converter apenas CHURCH_ADMIN que t√™m denomina√ß√£o
    
    # Por seguran√ßa, n√£o fazemos nada na revers√£o autom√°tica
    print("‚ÑπÔ∏è  Revers√£o n√£o executada automaticamente por seguran√ßa.")


class Migration(migrations.Migration):
    """
    Migra√ß√£o para converter pap√©is de DENOMINATION_ADMIN para CHURCH_ADMIN.
    
    Esta √© uma migra√ß√£o de dados cr√≠tica que reflete mudan√ßas no modelo de neg√≥cio.
    """

    dependencies = [
        ('accounts', '0016_alter_customuser_email_and_more'),  # √öltima migra√ß√£o existente
    ]

    operations = [
        migrations.RunPython(
            convert_denomination_admin_to_church_admin,
            reverse_conversion
        ),
    ]
